#!/bin/bash
set -e
if [ -z "$TUFTSID" ] || [ -z "$TUFTSPASS" ]; then
    echo "TUFTSID and TUFTSPASS env variables need to be set for this script."
    exit 1
fi 

# getStatus: returns the status of the server on retrieving user data.
#            1 indicates server is ready 
#            0 indicates server is not yet ready
#            -1 indicates a server error (as far as I can tell)
getStatus() {
    # GET request returns xml doc with a single <message> tag
    val="$(curl -s https://www.jumbocash.net/login-check.php?skey=${skey})"
    val=${val##*<message>} # parse numerical value
    val=${val%%</message>*}
    echo $val
}




echo "Retrieving data..."

cid="233" # Hard-coded variable on website
loginData="cid=${cid}&save=1&loginphrase=${TUFTSID}&password=${TUFTSPASS}"

# POST login data, then parse skey value from the html response.
skey="$(
    curl -s --data $loginData https://www.jumbocash.net/login.php |
    grep login.php |
    sed -r 's/.{38}//;s/.{30}$//')" # delete first 38 and last 30 characters

# necessary to GET this page for some reason, delete output
curl -s "https://www.jumbocash.net/login.php?skey=${skey}&cid=${cid}&fullscreen=1&wason=" > /dev/null

# Check every 2 seconds if the server is ready and fail on server error.
# TODO: limit number of attempts.
serverStatus=$(getStatus)
while [ "$serverStatus" != "1" ]; do
    if [ $serverStatus == "-1" ]; then
        exit 1
    fi
    sleep 2 # pause for 2 seconds
    serverStatus=$(getStatus)
done;

response=$(curl -s "https://www.jumbocash.net/index.php?skey=${skey}&cid=${cid}&")

# parse out jumbocash balance
balance=$(echo $response | grep "Current Balance:")
balance=${balance##*<b>Current Balance: }
balance=${balance%%</b><br>*}

# parse out meal plan
plan=$(echo $response | grep "formtitle" | tail -1)
plan=${plan##*<font class='formtitle'>}
plan=${plan%%</font><br>*}

# echo $plan
echo "Your Jumbocash balance is: $balance"
