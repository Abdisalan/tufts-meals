#!/bin/bash
set -e
source ~/.bashrc # in case script is executed from a non-Bash shell

if [ -z "$TUFTSID" ] || [ -z "$TUFTSPASS" ]; then
    echo "TUFTSID and TUFTSPASS env variables need to be set for this script."
    exit 1
fi 

# getStatus: returns the server status on retrieving user data. Return codes:
#            1: server is ready 
#            0: server is not ready
#            -1: server error (as far as I can tell)
getStatus() {
    # GET request returns xml doc with a single <message> tag
    curl -s https://www.jumbocash.net/login-check.php?skey=${skey} |
    sed -n '2s/.*ge>\(.*\)<.*/\1/p'
}



echo "Retrieving data..."

cid="233" # Hard-coded variable on website
loginData="cid=${cid}&save=1&loginphrase=${TUFTSID}&password=${TUFTSPASS}"

# POST login data, then parse skey value from the html response.
skey="$(
    curl -s --data $loginData https://www.jumbocash.net/login.php |
    sed -n '3s/.*skey=\([0-9a-z][0-9a-z]*\).*/\1/p')"

# Necessary to GET this page for some reason. Script runs curl request 
# asynchronously, and deletes output.
curl -s "https://www.jumbocash.net/login.php?skey=${skey}&cid=${cid}&fullscreen=1&wason=" > /dev/null &

# Check every second if the server is ready. Fail on server error.
# TODO: limit number of attempts.
serverStatus=$(getStatus)
while [ "$serverStatus" != "1" ]; do
    if [ "$serverStatus" == "-1" ]; then
        >&2 echo "Server error."
        exit 1
    fi
    sleep 1 # pause for 1 second
    serverStatus=$(getStatus)
done;

# Handle flag arguments
for arg in "$@"; do
    case $arg in 
        -l) # open jumbocash.net page in browser already authenticated
            xdg-open "https://www.jumbocash.net/index.php?skey=${skey}&cid=${cid}&" &
            exit 0
            ;;
        -d) # open jumbocash.net deposit page
            xdg-open "https://www.jumbocash.net/payment.php?skey=${skey}&cid=${cid}&" &
            exit 0
            ;;
        *) 
            echo "Unrecognized arg: $arg"
            exit 1
            ;;
    esac
done

# retrieve 
response=$(curl -s "https://www.jumbocash.net/index.php?skey=${skey}&cid=${cid}&")

# parse out jumbocash balance
balance=$(echo $response | grep "Current Balance:")
balance=${balance##*<b>Current Balance: }
balance=${balance%%</b><br>*}

# parse out meal plan
plan=$(echo $response | grep "formtitle" | tail -1)
plan=${plan##*<font class='formtitle'>}
plan=${plan%%</font><br>*}

# echo $plan
echo "Your Jumbocash balance is: $balance"
