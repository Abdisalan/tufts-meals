#!/usr/bin/env bash

set -e

if [ -z "$TUFTSID" ] || [ -z "$TUFTSPASS" ]; then
        echo "TUFTSID and TUFTSPASS need to be set for this script. \
if you are using bash, this can be done by adding the lines \
'export TUFTSID=\"XXXXXXX\"' and 'export TUFTSPASS=\"XXXXXXX\"' \
to your .bashrc file and then running 'source .bashrc'."
        exit 1
fi  

# getStatus: function returns the server status to determine whether the final
#       page is available or if there is an internal error. 0 indicates that
#       the server is not ready, 1 indicates that it is, and -1 indicates an error. 
getStatus() {
    val="$(curl -s https://www.jumbocash.net/login-check.php?skey=${skey})"
    val=${val##*<message>}
    val=${val%%</message>*}
    echo $val
}

# x and y values are the coordinates clicked on 'submit' image
data="cid=233&save=1&loginphrase=${TUFTSID}&password=${TUFTSPASS}&x=48&y=4"
text="$(
    curl -s --data $data https://www.jumbocash.net/login.php | # post login data
    grep login.php)" # search for response line which redirects

# parse skey value from text
skey=${text##*skey=}
skey=${skey%%&cid*}

# parse cid value from text
cid=${text##*&cid=}
cid=${cid%%&fullscreen=*}

# not sure why it is necessary to GET this page
curl -s "https://www.jumbocash.net/login.php?skey=${skey}&cid=${cid}&fullscreen=1&wason=" > /dev/null
serverStatus=$(getStatus)

while [ "$serverStatus" != "1" ]; do
    #echo "status:" ${serverStatus}
    #echo "server status != 1"
    if [ $serverStatus == "-1" ]; then
        exit 1
    fi
    sleep 3 # pause for 3 seconds
    serverStatus=$(getStatus)
done;

response=$(curl -s "https://www.jumbocash.net/index.php?skey=${skey}&cid=${cid}&")

# parse out jumbocash balance
balance=$(echo $response | grep "Current Balance:")
balance=${balance##*<b>Current Balance: }
balance=${balance%%</b><br>*}

# parse out meal plan
plan=$(echo $response | grep "formtitle" | tail -1)
plan=${plan##*<font class='formtitle'>}
plan=${plan%%</font><br>*}

echo $plan
echo $balance
